spring:
  application:
    name: cloud-trpc-server
  sleuth:
    sampler:
      percentage: 1
    scheduled:
      enabled: true
  cloud:
    consul:
      host: localhost
      port: 8500
      enabled: true
      discovery:
        register: false
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  datasource:
      url: jdbc:mysql://127.0.0.1:3306/grpc?statementInterceptors=com.itiancai.trpc.trace.mysql.TracingStatementInterceptor
      username: root
      password: root
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: true
      testOnReturn: true
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,log4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

management:
  health:
    consul:
      enabled: false

server:
  port: 0
trpc:
  server:
    port: 9090

ratelimit:
  enabled: true
  server: GRPC
  default-policy: #optional - will apply unless specific policy exists
    limit: 3 #optional - request number limit per refresh interval window
    quota: 1000 #optional - request time limit per refresh interval window (in seconds)
    refresh-interval: 60 #default value (in seconds)
    type: origin
  policies:
    sayHello:
      limit: 3 #optional - request number limit per refresh interval window
      quota: 1000 #optional - request time limit per refresh interval window (in seconds)
      refresh-interval: 60 #default value (in seconds)
      type: origin